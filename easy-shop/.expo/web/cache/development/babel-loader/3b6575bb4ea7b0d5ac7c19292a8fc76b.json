{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Container, Text, Left, Right, H1 } from 'native-base';\nimport { SwipeListView } from 'react-native-swipe-list-view';\nimport CartItem from \"./CartItem\";\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport EasyButton from \"../../Shared/StyledComponents/EasyButton\";\nimport { connect } from 'react-redux';\nimport * as actions from \"../../Redux/Actions/cartActions\";\nimport AuthGlobal from \"../../Context/store/AuthGlobal\";\nimport axios from 'axios';\nimport baseURL from \"../../assets/common/baseUrl\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nvar _Dimensions$get = Dimensions.get('window'),\n    height = _Dimensions$get.height,\n    width = _Dimensions$get.width;\n\nvar Cart = function Cart(props) {\n  var context = useContext(AuthGlobal);\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      productUpdate = _useState2[0],\n      setProductUpdate = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      totalPrice = _useState4[0],\n      setTotalPrice = _useState4[1];\n\n  useEffect(function () {\n    getProducts();\n    return function () {\n      setProductUpdate();\n      setTotalPrice();\n    };\n  }, [props]);\n\n  var getProducts = function getProducts() {\n    var products = [];\n    props.cartItems.forEach(function (cart) {\n      axios.get(baseURL + \"products/\" + cart.product).then(function (data) {\n        products.push(data.data);\n        setProductUpdate(products);\n        var total = 0;\n        products.forEach(function (product) {\n          var price = total += product.price;\n          setTotalPrice(price);\n        });\n      }).catch(function (e) {\n        console.log(e);\n      });\n    });\n  };\n\n  return React.createElement(React.Fragment, null, productUpdate ? React.createElement(Container, null, React.createElement(H1, {\n    style: {\n      alignSelf: 'center'\n    }\n  }, \"Cart\"), React.createElement(SwipeListView, {\n    data: productUpdate,\n    renderItem: function renderItem(data) {\n      return React.createElement(CartItem, {\n        item: data\n      });\n    },\n    renderHiddenItem: function renderHiddenItem(data) {\n      return React.createElement(View, {\n        style: styles.hiddenContainer\n      }, React.createElement(TouchableOpacity, {\n        style: styles.hiddenButton,\n        onPress: function onPress() {\n          return props.removeFromCart(data.item);\n        }\n      }, React.createElement(Icon, {\n        name: \"trash\",\n        color: 'white',\n        size: 30\n      })));\n    },\n    disableRightSwipe: true,\n    previewOpenDelay: 3000,\n    friction: 1000,\n    tension: 40,\n    leftOpenValue: 75,\n    stopLeftSwipe: 75,\n    rightOpenValue: -75\n  }), React.createElement(View, {\n    style: styles.bottomContainer\n  }, React.createElement(Left, null, React.createElement(Text, {\n    style: styles.price\n  }, \"$ \", totalPrice)), React.createElement(Right, null, React.createElement(EasyButton, {\n    danger: true,\n    medium: true,\n    onPress: function onPress() {\n      return props.clearCart();\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white'\n    }\n  }, \"Clear\"))), React.createElement(Right, null, context.stateUser.isAuthenticated ? React.createElement(EasyButton, {\n    primary: true,\n    medium: true,\n    onPress: function onPress() {\n      return props.navigation.navigate('Checkout');\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white'\n    }\n  }, \"Checkout\")) : React.createElement(EasyButton, {\n    secondary: true,\n    medium: true,\n    onPress: function onPress() {\n      return props.navigation.navigate('Login');\n    }\n  }, React.createElement(Text, {\n    style: {\n      color: 'white'\n    }\n  }, \"Login\"))))) : React.createElement(Container, {\n    style: styles.emptyContainer\n  }, React.createElement(Text, null, \"Looks like your cart is empty\"), React.createElement(Text, null, \"Add products to your cart to get started\")));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var cartItems = state.cartItems;\n  return {\n    cartItems: cartItems\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    clearCart: function clearCart() {\n      return dispatch(actions.clearCart());\n    },\n    removeFromCart: function removeFromCart(item) {\n      return dispatch(actions.removeFromCart(item));\n    }\n  };\n};\n\nvar styles = StyleSheet.create({\n  emptyContainer: {\n    height: height,\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  bottomContainer: {\n    flexDirection: 'row',\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    backgroundColor: 'white',\n    elevation: 20\n  },\n  price: {\n    fontSize: 18,\n    margin: 20,\n    color: 'red'\n  },\n  hiddenContainer: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    flexDirection: 'row'\n  },\n  hiddenButton: {\n    backgroundColor: 'red',\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n    paddingRight: 25,\n    height: 70,\n    width: width / 1.2\n  }\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);","map":{"version":3,"sources":["/Users/atultiwari/Desktop/mern-ecom-app/easy-shop/Screens/Cart/Cart.js"],"names":["React","useContext","useEffect","useState","Container","Text","Left","Right","H1","SwipeListView","CartItem","Icon","EasyButton","connect","actions","AuthGlobal","axios","baseURL","AsyncStorage","Dimensions","get","height","width","Cart","props","context","productUpdate","setProductUpdate","totalPrice","setTotalPrice","getProducts","products","cartItems","forEach","cart","product","then","data","push","total","price","catch","e","console","log","alignSelf","styles","hiddenContainer","hiddenButton","removeFromCart","item","bottomContainer","clearCart","color","stateUser","isAuthenticated","navigation","navigate","emptyContainer","mapStateToProps","state","mapDispatchToProps","dispatch","StyleSheet","create","alignItems","justifyContent","flexDirection","position","bottom","left","backgroundColor","elevation","fontSize","margin","flex","paddingRight"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useState } from 'react';\nimport { View, Dimensions, StyleSheet, TouchableOpacity } from 'react-native';\nimport { Container, Text, Left, Right, H1 } from 'native-base';\nimport { SwipeListView } from 'react-native-swipe-list-view';\nimport CartItem from './CartItem';\n\nimport Icon from 'react-native-vector-icons/FontAwesome';\nimport EasyButton from '../../Shared/StyledComponents/EasyButton';\n\nimport { connect } from 'react-redux';\nimport * as actions from '../../Redux/Actions/cartActions';\nimport AuthGlobal from '../../Context/store/AuthGlobal';\nimport axios from 'axios';\nimport baseURL from '../../assets/common/baseUrl';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nvar { height, width } = Dimensions.get('window');\n\nconst Cart = (props) => {\n  const context = useContext(AuthGlobal);\n\n  // Add this\n  const [productUpdate, setProductUpdate] = useState();\n  const [totalPrice, setTotalPrice] = useState();\n  useEffect(() => {\n    getProducts();\n    return () => {\n      setProductUpdate();\n      setTotalPrice();\n    };\n  }, [props]);\n\n  const getProducts = () => {\n    var products = [];\n    props.cartItems.forEach((cart) => {\n      axios\n        .get(`${baseURL}products/${cart.product}`)\n        .then((data) => {\n          products.push(data.data);\n          setProductUpdate(products);\n          var total = 0;\n          products.forEach((product) => {\n            const price = (total += product.price);\n            setTotalPrice(price);\n          });\n        })\n        .catch((e) => {\n          console.log(e);\n        });\n    });\n  };\n\n  return (\n    <>\n      {productUpdate ? (\n        <Container>\n          <H1 style={{ alignSelf: 'center' }}>Cart</H1>\n          <SwipeListView\n            data={productUpdate}\n            renderItem={(data) => <CartItem item={data} />}\n            renderHiddenItem={(data) => (\n              <View style={styles.hiddenContainer}>\n                <TouchableOpacity\n                  style={styles.hiddenButton}\n                  onPress={() => props.removeFromCart(data.item)}\n                >\n                  <Icon name='trash' color={'white'} size={30} />\n                </TouchableOpacity>\n              </View>\n            )}\n            disableRightSwipe={true}\n            previewOpenDelay={3000}\n            friction={1000}\n            tension={40}\n            leftOpenValue={75}\n            stopLeftSwipe={75}\n            rightOpenValue={-75}\n          />\n          <View style={styles.bottomContainer}>\n            <Left>\n              <Text style={styles.price}>$ {totalPrice}</Text>\n            </Left>\n            <Right>\n              <EasyButton danger medium onPress={() => props.clearCart()}>\n                <Text style={{ color: 'white' }}>Clear</Text>\n              </EasyButton>\n            </Right>\n            <Right>\n              {context.stateUser.isAuthenticated ? (\n                <EasyButton\n                  primary\n                  medium\n                  onPress={() => props.navigation.navigate('Checkout')}\n                >\n                  <Text style={{ color: 'white' }}>Checkout</Text>\n                </EasyButton>\n              ) : (\n                <EasyButton\n                  secondary\n                  medium\n                  onPress={() => props.navigation.navigate('Login')}\n                >\n                  <Text style={{ color: 'white' }}>Login</Text>\n                </EasyButton>\n              )}\n            </Right>\n          </View>\n        </Container>\n      ) : (\n        <Container style={styles.emptyContainer}>\n          <Text>Looks like your cart is empty</Text>\n          <Text>Add products to your cart to get started</Text>\n        </Container>\n      )}\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => {\n  const { cartItems } = state;\n  return {\n    cartItems: cartItems,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    clearCart: () => dispatch(actions.clearCart()),\n    removeFromCart: (item) => dispatch(actions.removeFromCart(item)),\n  };\n};\n\nconst styles = StyleSheet.create({\n  emptyContainer: {\n    height: height,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  bottomContainer: {\n    flexDirection: 'row',\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    backgroundColor: 'white',\n    elevation: 20,\n  },\n  price: {\n    fontSize: 18,\n    margin: 20,\n    color: 'red',\n  },\n  hiddenContainer: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    flexDirection: 'row',\n  },\n  hiddenButton: {\n    backgroundColor: 'red',\n    justifyContent: 'center',\n    alignItems: 'flex-end',\n    paddingRight: 25,\n    height: 70,\n    width: width / 1.2,\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n"]},"metadata":{},"sourceType":"module"}