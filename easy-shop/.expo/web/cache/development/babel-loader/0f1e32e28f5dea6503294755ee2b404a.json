{"ast":null,"code":"import jwt_decode from 'jwt-decode';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Toast from 'react-native-toast-message';\nimport baseURL from \"../../assets/common/baseUrl\";\nexport var SET_CURRENT_USER = 'SET_CURRENT_USER';\nexport var loginUser = function loginUser(user, dispatch) {\n  fetch(baseURL + \"users/login\", {\n    method: 'POST',\n    body: JSON.stringify(user),\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    }\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    if (data) {\n      var token = data.token;\n      AsyncStorage.setItem('jwt', token);\n      var decoded = jwt_decode(token);\n      dispatch(setCurrentUser(decoded, user));\n    } else {\n      logoutUser(dispatch);\n    }\n  }).catch(function (err) {\n    Toast.show({\n      topOffset: 60,\n      type: 'error',\n      text1: 'Please provide correct credentials',\n      text2: ''\n    });\n    logoutUser(dispatch);\n  });\n};\nexport var getUserProfile = function getUserProfile(id) {\n  fetch(baseURL + \"users/\" + id, {\n    method: 'GET',\n    body: JSON.stringify(user),\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json'\n    }\n  }).then(function (res) {\n    return res.json();\n  }).then(function (data) {\n    return console.log(data);\n  });\n};\nexport var logoutUser = function logoutUser(dispatch) {\n  AsyncStorage.removeItem('jwt');\n  dispatch(setCurrentUser({}));\n};\nexport var setCurrentUser = function setCurrentUser(decoded, user) {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded,\n    userProfile: user\n  };\n};","map":{"version":3,"sources":["/Users/atultiwari/Desktop/mern-ecom-app/easy-shop/Context/actions/Auth.actions.js"],"names":["jwt_decode","AsyncStorage","Toast","baseURL","SET_CURRENT_USER","loginUser","user","dispatch","fetch","method","body","JSON","stringify","headers","Accept","then","res","json","data","token","setItem","decoded","setCurrentUser","logoutUser","catch","err","show","topOffset","type","text1","text2","getUserProfile","id","console","log","removeItem","payload","userProfile"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,YAAvB;AACA,OAAOC,YAAP,MAAyB,2CAAzB;AAEA,OAAOC,KAAP,MAAkB,4BAAlB;AACA,OAAOC,OAAP;AAEA,OAAO,IAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAACC,IAAD,EAAOC,QAAP,EAAoB;AAC3CC,EAAAA,KAAK,CAAIL,OAAJ,kBAA0B;AAC7BM,IAAAA,MAAM,EAAE,MADqB;AAE7BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAFuB;AAG7BO,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB;AAFT;AAHoB,GAA1B,CAAL,CAQGC,IARH,CAQQ,UAACC,GAAD;AAAA,WAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,GARR,EASGF,IATH,CASQ,UAACG,IAAD,EAAU;AACd,QAAIA,IAAJ,EAAU;AACR,UAAMC,KAAK,GAAGD,IAAI,CAACC,KAAnB;AACAlB,MAAAA,YAAY,CAACmB,OAAb,CAAqB,KAArB,EAA4BD,KAA5B;AACA,UAAME,OAAO,GAAGrB,UAAU,CAACmB,KAAD,CAA1B;AACAZ,MAAAA,QAAQ,CAACe,cAAc,CAACD,OAAD,EAAUf,IAAV,CAAf,CAAR;AACD,KALD,MAKO;AACLiB,MAAAA,UAAU,CAAChB,QAAD,CAAV;AACD;AACF,GAlBH,EAmBGiB,KAnBH,CAmBS,UAACC,GAAD,EAAS;AACdvB,IAAAA,KAAK,CAACwB,IAAN,CAAW;AACTC,MAAAA,SAAS,EAAE,EADF;AAETC,MAAAA,IAAI,EAAE,OAFG;AAGTC,MAAAA,KAAK,EAAE,oCAHE;AAITC,MAAAA,KAAK,EAAE;AAJE,KAAX;AAMAP,IAAAA,UAAU,CAAChB,QAAD,CAAV;AACD,GA3BH;AA4BD,CA7BM;AA+BP,OAAO,IAAMwB,cAAc,GAAG,SAAjBA,cAAiB,CAACC,EAAD,EAAQ;AACpCxB,EAAAA,KAAK,CAAIL,OAAJ,cAAoB6B,EAApB,EAA0B;AAC7BvB,IAAAA,MAAM,EAAE,KADqB;AAE7BC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf,CAFuB;AAG7BO,IAAAA,OAAO,EAAE;AACPC,MAAAA,MAAM,EAAE,kBADD;AAEP,sBAAgB;AAFT;AAHoB,GAA1B,CAAL,CAQGC,IARH,CAQQ,UAACC,GAAD;AAAA,WAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,GARR,EASGF,IATH,CASQ,UAACG,IAAD;AAAA,WAAUe,OAAO,CAACC,GAAR,CAAYhB,IAAZ,CAAV;AAAA,GATR;AAUD,CAXM;AAaP,OAAO,IAAMK,UAAU,GAAG,SAAbA,UAAa,CAAChB,QAAD,EAAc;AACtCN,EAAAA,YAAY,CAACkC,UAAb,CAAwB,KAAxB;AACA5B,EAAAA,QAAQ,CAACe,cAAc,CAAC,EAAD,CAAf,CAAR;AACD,CAHM;AAKP,OAAO,IAAMA,cAAc,GAAG,SAAjBA,cAAiB,CAACD,OAAD,EAAUf,IAAV,EAAmB;AAC/C,SAAO;AACLsB,IAAAA,IAAI,EAAExB,gBADD;AAELgC,IAAAA,OAAO,EAAEf,OAFJ;AAGLgB,IAAAA,WAAW,EAAE/B;AAHR,GAAP;AAKD,CANM","sourcesContent":["import jwt_decode from 'jwt-decode';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport Toast from 'react-native-toast-message';\nimport baseURL from '../../assets/common/baseUrl';\n\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\n\nexport const loginUser = (user, dispatch) => {\n  fetch(`${baseURL}users/login`, {\n    method: 'POST',\n    body: JSON.stringify(user),\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n  })\n    .then((res) => res.json())\n    .then((data) => {\n      if (data) {\n        const token = data.token;\n        AsyncStorage.setItem('jwt', token);\n        const decoded = jwt_decode(token);\n        dispatch(setCurrentUser(decoded, user));\n      } else {\n        logoutUser(dispatch);\n      }\n    })\n    .catch((err) => {\n      Toast.show({\n        topOffset: 60,\n        type: 'error',\n        text1: 'Please provide correct credentials',\n        text2: '',\n      });\n      logoutUser(dispatch);\n    });\n};\n\nexport const getUserProfile = (id) => {\n  fetch(`${baseURL}users/${id}`, {\n    method: 'GET',\n    body: JSON.stringify(user),\n    headers: {\n      Accept: 'application/json',\n      'Content-Type': 'application/json',\n    },\n  })\n    .then((res) => res.json())\n    .then((data) => console.log(data));\n};\n\nexport const logoutUser = (dispatch) => {\n  AsyncStorage.removeItem('jwt');\n  dispatch(setCurrentUser({}));\n};\n\nexport const setCurrentUser = (decoded, user) => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded,\n    userProfile: user,\n  };\n};\n"]},"metadata":{},"sourceType":"module"}